# This workflow will create a GitHub release with the wheel package from CI artifacts
name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: ["completed"]
    branches: ["main"]
  workflow_dispatch:

jobs:
  approval:
   name: Manual Approval
   runs-on: ubuntu-latest
   if: success() # Only proceed if terraform-plan job succeeds
   permissions:
     issues: write
   steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: hanyfakhry,westrheim
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: "Please approve or deny the deployment."

  release:
    if: success()
    environment: Production
    needs: approval
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifacts from CI workflow
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: ci.yml
        workflow_conclusion: success
        name: python-package-distributions
        path: dist
        if_no_artifact_found: fail


    - name: Create and push tag
      run: |
          VERSION=$(python -c "import re; print(re.search(r'version=['\"]([^'\"]+)['\"]', open('setup.py').read()).group(1))")
          TAG="v${{ VERSION }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "$TAG" -m "Release $TAG - Automated tag"
          git push origin "$TAG"
          echo "Created and pushed tag: $TAG"
    
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: latest
        files: dist/*.whl
        draft: false
        prerelease: false
        generate_release_notes: true
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}