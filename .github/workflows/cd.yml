# This workflow will create a GitHub release with the wheel package from CI artifacts
name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: ["completed"]
    branches: ["main"]
  workflow_dispatch:

jobs:
  prerelease:
    if: success()
    environment: Production
    name: Create PreRelease
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.ci-metadata.outputs.ci_run_number }}
    
    steps:
    - name: Download artifacts from CI workflow
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: ci.yml
        workflow_conclusion: success
        name: python-package-distributions
        path: dist
        if_no_artifact_found: fail
    
    - name: Read Ci metadata
      id: ci-metadata
      run: |
          RUN_NUMBER=$(cat dist/package-version.txt)
          echo "ci_run_number=$RUN_NUMBER" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "${{ steps.ci-metadata.outputs.ci_run_number }}"
        files: dist/*.whl
        draft: false
        prerelease: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Create a tag
      run: |
        TAG_NAME="prerelease"
        git tag $TAG_NAME
        git push -f origin $TAG_NAME

  # release:
  #   if: success()
  #   environment: Production
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs: prerelease
  #   steps:
  #   - name: Create GitHub Release
  #     id: create_release
  #     uses: softprops/action-gh-release@v2
  #     with:
  #       tag_name: "${{ needs.prerelease.outputs.package_version }}"
  #       draft: false
  #       prerelease: false
  #       generate_release_notes: true
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}      